name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
      pull-requests: write      # 'write' access to pull requests

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache dependencies
      uses: actions/cache@v2
      working-directory: ./demo
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      working-directory: ./demo
      run: yarn install --frozen-lockfile

    # - name: Run the tests and generate coverage report
    #   run: npm test -- --coverage

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1

    - name: Build
      run: yarn build

    - name: Deploy frontend using Github Pages
      uses: ad-m/github-push-action@v0.8.0
      with:
        # Token for the repo
        # Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # Destination branch to push changes
        branch: gh-pages-demo
        # Use force push to fully overwrite the destination branch
        force: true
        # We have to push from the folder where files were generated.
        # Same were the new repo was initialized in the previous step
        directory: ./demo/build